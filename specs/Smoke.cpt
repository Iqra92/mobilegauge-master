Created by testinium on 9.06.2022

This is a concept file with following syntax for each concept.

This is a concept file with following syntax for each concept.
# Go to Main Page For Koton MobileSite
* Go to "https://m.koton.com/tr/" address
* Wait "5" seconds
* Wait for element then click "kotonLogin"
//* Click element by "allowTheNotification" if exist
//* Click to element "kotonTest"
* Wait "5" seconds
//* Wait for element then click "allowTheNotification"
//* Wait for element then click "allowTheNotification"
//* Click element by "closeTheCookie" if exist
//* Click element by "closeAppMobileRedirect" if exist

# Go to Test Env
* Go to "https://m-test.texsportbet.com/en-gb" address
* Wait "2" seconds
//* Click to element "stayInMobil"
* Check if element "loginButton" exists
* Check if element "registerButton" exists
* Wait "2" seconds
//* Elementine tıkla "gotItButton"

# Go to QA Env
//* Wait "10" seconds
//* Go to "https://m-test.texsportbet.com/en-gb" address
//* Wait "10" seconds
//* Assert that the text of element "usernameInBalanceArea" is null
//* Check if element "loginButton" exists
//* Check if element "registerButton" exists
* Wait "2" seconds
//* Elementine tıkla "gotItButton"
* Wait for element then click "hamburgerMenu"
* Wait for element then click "loginButtonInHamburgerMenu"
* Write value "iqra.manzoor@ligastavok.ru" to element "loginUserNameArea"
* Write value "123456789" to element "loginPasswordArea"
* Click to element "loginButtonArea"

# Go to QA Env For Equador country
* Wait "2" seconds
* Wait for element then click "hamburgerMenu"
* Wait for element then click "loginButtonInHamburgerMenu"
* Write value "iq.manzoor92@gmail.com" to element "loginUserNameArea"
* Write value "123456789" to element "loginPasswordArea"
* Click to element "loginButtonArea"

# Go to register page
*Wait "2" seconds
* Wait for element then click "hamburgerMenu"
//* Click to element "registerButton"
* Wait for element then click "registerButton"
* Wait "2" seconds

# Sign Up
//* Find element by "firstNameInput" clear and send keys "test"
* Write random Alpha value to element "firstNameInput" starting with "test"
* Write random Alpha value to element "lastNameInput" starting with "testinium"
//* Debug Step
//* Find element by "birthdayField" and send value
* Send value to the defined element
//* Date picker from Android Calendar "10.10.1990" for date's field "birthdayField"
//* Write random date to element "birthdayField"
* Click to element "nextBtn"
* Find element by "email" clear and send keys random email
* Write value "qwerty123" to element "registerPassword"
* Write value "qwerty123" to element "registerPasswordRepeat"
* Wait "2" seconds
* Pick the one of elements "phoneNumberCodeOptions" randomly
* Wait "2" seconds
//* Wait for element then click "phoneNumber"
* Send number to the defined element
//* Generate to random phonenumber
* Wait "2" seconds
* Pick the one of elements "countryOptions" randomly
* Wait "2" seconds
* Pick the one of elements "currencyOptions" randomly
* Wait "2" seconds
//* scroll to the "<key>" area
//* write the phone number to "mobilephone" the element
* Wait for element then click "nextBtn"
* Wait for element then click "acceptCheckBox"
* Wait for element then click "saveButton"

# Verify that the registration is done
* Find element by "registrationLabel" and verify that text of element equals to "Registration completed!"

# Verify that the site is proceeded to Login Page
* Wait "10" seconds
* Get current url and verify that the url is the same with the "https://m-test.texsportbet.com/en-gb/Account/Login"


# Go to Forgot Password Page
* Click element by "hamburgerMenu" if exist
* Wait "2" seconds
* scroll to the element "lostPasswordPage" be visible
* Wait "2" seconds
* Click to element "lostPasswordPage"
* Wait "2" seconds
* "beliztest" textini "logonName" elemente yaz
* Click to element "NextButton"
* "7" textini "lostPasswordSecurityQuestion" elemente yaz
* Click to element "NextButton"
* Wait "2" seconds
* Check if element "welcomeLabel" contains text "Lost"
* Wait "2" seconds
* Check if element "lostPasswordSendMailPage" contains text "the password was sent to your stored mail"
* Click to element "NextButton"

# Login with <username> and <password>
* Elementine tıkla "loginButton"
* <username> textini "loginUserNameArea" elemente yaz
* <password> textini "loginPasswordArea" elemente yaz
* Elementine tıkla "loginButtonArea"
* Wait "2" seconds
* Find element by "assertLoginName" and text contains any value
//* "assertLoginName" element on the page contains "Beliz" the value

# ReLogin with right <password>
* <password> textini "loginPasswordArea" elemente yaz
* Elementine tıkla "loginButtonArea"
* Wait "2" seconds
* Find element by "assertLoginName" and text contains any value


# Go to Change Password Page
* Wait "2" seconds
* Click to element "hamburgerMenu"
//* Click to element "changeLanguage"
//* Click to element "englishButtoninLanguagePage"
//* Click to element "hamburgerMenu"
//* Click element by "hamburgerMenu" if exist
* Click to element "profilePage"
* Wait "2" seconds
* Click to element "changePasswordPage"

# Change Password write <currentPass> and <newPass> and <repeatNewPass>
* <currentPass> textini "currentPass" elemente yaz
* <newPass> textini "newPass" elemente yaz
* <repeatNewPass> textini "repeatNewPass" elemente yaz
* Elementine tıkla "saveButton"
* Wait "2" seconds
* Find element by "assersionOfSaveFunction" and verify that text of element equals to "Your new password has been set for your account."
* Wait "2" seconds

# LogOut
* Click element by "hamburgerMenu" if exist
* Wait "2" seconds
* scroll to the element "logoutButton" be visible
* Wait "2" seconds
* Click to element "logoutButton"

# Wrong Password Entry
* Element var mı kontrol et "loginButton"
* Elementine tıkla "loginButton"
* "beliztest" textini "loginUserNameArea" elemente yaz
* "password1" textini "loginPasswordArea" elemente yaz
* Elementine tıkla "loginButtonArea"
* Wait "2" seconds
* Element var mı kontrol et "loginErrorMessage"
* Wait "2" seconds

# Choose Bet
* Wait "3" seconds
//* Pick the one of elements "firstBetOptionOfLastMinuteMatches" randomly
//* scroll to the element "lastMatchOfLastMinuteMatches" be visible
* scroll to "100" and "0"
* Wait "2" seconds
* "firstBetOptionOfLastMinuteMatches" listesinden bir element seç ve "elementvalue" olarak sakla
* Wait "3" seconds

# Go to The Bet Slip Page
* Wait for element then click "cicleOfSelectedMathces"


# Accept Bet
* "2" saniye bekle
* "slipOddValue" li elementi bul ve değeri "elementvalue" saklanan değeri içeriyor mu kontrol et
* Find element by "selectedMatchInBetSlipPage" and save text "selectedmatch"
//* seçilmiş "slipOddValue"'li elementin text değerini "oddValue" olarak sakla
* Wait "2" seconds
//* "slipOddValue" li elementi bul ve değerini "oddValue" saklanan degeri ile "firstBetOptionOfLastMinuteMatches" li elementi bul ve değerini "elementvalue" saklanan degeri kıyasla
* Click to element "StakeValue"
//* Click to element "enterStakeAmount"
* Wait "2" seconds
* Pick the one of elements "numList" randomly
* Wait "2" seconds
//* Write int value "35" to element "enterStakeAmount"
//* Write value "35.00 CLP" to element "enterStakeAmount"
* Click to element "okButton"
* Wait "2" seconds
* Click to element "submitBetSlip"
* Wait "2" seconds
* Find element by "popNotification" and verify that text of element equals to "Your bet has been booked!"

# Return to Home Page After Placed Bet
* Click to element "returnToHome"

# Bet Detail View
* Click to element "hamburgerMenu"
* Wait "2" seconds
* Click to element "betsPage"
* Wait "2" seconds
* Wait for element then click "betsPageAllOption"
* Wait for element then click "betsPageAllOptionFirstBetToClose"
* Wait for element then click "betsPageAllOptionFirstBetToOpen"
* Wait "2" seconds
* Find element by "placedMatchInBetsPage" and compare saved key "selectedmatch" contains the text of element

#go to bet and check the first bet
* Click to element "hamburgerMenu"
* Wait "2" seconds
* Click to element "betsPage"
* Wait "2" seconds
* Wait for element then click "betsPageAllOption"
* Wait "2" seconds
* Wait for element then click "betsPageAllOptionFirstBetToClose"
* Wait for element then click "betsPageAllOptionFirstBetToOpen"


# Go to Home Page With Logo
* Wait for element then click "goToHomePage"

# Bet Rearrange
* Elementine tıkla "betRearrange"
* "10" saniye bekle

# Go to Payment
* Click to element "hamburgerMenu"
* Click to element "goToPaymentPage"

# Choose to Payment Method with <key>
* Wait for element then click <key>

# Genarete Random Deposit Value and Enter that value
//* Genarete random number for "depositLowAmount" and "depositHighAmount", and saved the number "randomNumber"
* Genarete random number for "depositLowAmount" and "depositHighAmount", and saved the number "randomNumber". And write the saved key to the "transactionAmount" element
* Wait "5" seconds
//* Find element by "depositAmount" and write the saved key "randomNumber" to element
//* "600" textini "depositAmount" elemente yaz

# Genarete Random Transaction Value and Enter that value
* Genarete random number for "depositLowAmount" and "depositHighAmount" and "currentBalanceTransaction", and saved the number "randomNumber". And write the saved key to the "transactionAmount" element
* Wait "2" seconds

# Enter Amount
* Save Low amount "depositLowAmount" and Write Amount "transactionAmount"

# Enter Amount For Dollar
* Save Low dollar amount "depositLowAmount" and Write Amount "transactionAmount"

# Continue To Transaction
* Wait "2" seconds
* Click to the defined element with "continueToTransaction"
//* Wait for element then click "continueToTransaction"
* Wait "5" seconds

# Enter Bank Account Information <cusID> for APS
* Wait "10" seconds
* Write value <cusID> to element "customerID"
* Wait for element then click "customerIDType"
* Wait "2" seconds
* Wait for element then click "listOfCustomerIDType"
* Wait for element then click "payButton"
* Wait "30" seconds

# Enter New Credit Card İnformation with <cardnumber>
* Find element by "creditCardNumber" clear and send keys <cardnumber>
* Find element by "ownerNameOfCard" clear and send keys "Test"
* Elementine tıkla "newCardAdd"
* Elementine tıkla "saveButton"
* "5" saniye bekle
* Elementine tıkla "saveButton"

# Enter Credit Card İnformation with <cardnumber>, <cardownername> and <cvvNumber>
* Wait "10" seconds
* Write value <cardnumber> to element "creditCardNumber"
//* Find element by "creditCardNumber" clear and send keys <cardnumber>
//* Find element by "ownerNameOfCard" clear and send keys "Test"
* Wait "2" seconds
* Write value <cardownername> to element "ownerNameOfCard"
* Write value <cvvNumber> to element "cvvField"
* Pick the one of elements "optionsOfMonths" randomly
* Pick the one of elements "optionsOfYears" randomly
* Wait for element then click "continueButton"
* Wait "2" seconds


# Enter Credit Card İnformation with <cardnumber>, <cardownername> and <cvvNumber> apco
* Wait "10" seconds
* Wait for element then click "addCard"
* Wait "2" seconds
* Write value <cardnumber> to element "apcoCreditCard"
//* Find element by "creditCardNumber" clear and send keys <cardnumber>
//* Find element by "ownerNameOfCard" clear and send keys "Test"
* Write value <cardownername> to element "apcoOwnerName"
* Write value <cvvNumber> to element "apcoCvv"
* Pick the one of elements "monthOptionsApco" randomly
* Pick the one of elements "yearOptionsApco" randomly
* Wait "10" seconds
* Wait for element then click "submitBtnApco"
//* Write value "123" to element "apcoPassword"
//* Wait "5" seconds


# Select the Identity Type and Enter the Identity Number
* Pick the one of elements "optionsOfIdentityTypeForMonnet" randomly
* Find element by "identityNumberForMonnet" clear and send keys "111111211"


# Select to the credit option for deposit method
* Wait for element then click "creditoForMonnet"

# Enter Credit Card İnformation with <cardno>, <cvvNo> and <cardexpirationno> APS
* Wait "10" seconds
* Write value <cardno> to element "ApsCreditCard"
* Write value <cvvNo> to element "ApsCvv"
* Write value <cardexpirationno> to element "cardExpirationAPS"
* Wait "5" seconds
* Wait for element then click "cuntinueButtonMonnet"
* Wait "4" seconds
* Wait for element then click "cuntinueButtonMonnet"

# Select the bank option and enter bank card info <cardnumber> for APS debit
* Wait for element then click "bankListForDebitAPS"
* Wait "2" seconds
* Wait for element then click "bankOptionForDebitAPS"
//* Pick the one of elements "bankOptionForDebitMonnet" randomly
* Write value <cardnumber> to element "cardNumberForDebitAPS"
* Wait for element then click "pagarButtonToContinuePayment"

# Select to the <paymet> option for deposit method
* Wait for element then click <paymet>

# Select the bank option and enter bank card info <cardnumber> for debit
* Wait for element then click "bankListForDebitMonnet"
* Wait "2" seconds
* Pick the one of elements "bankOptionForDebitMonnet" randomly
* Write value <cardnumber> to element "cardNumberForDebitMonnet"
* Wait for element then click "pagarButtonToContinuePayment"

# Compare the deposit amount <saveKey> to the value in payment method <saveKeyy> by replaced text <key>
* Get text by <key> and replace the symbols than save the text <saveKeyy>
* Compare saved key <saveKey> contains the other saved key <saveKeyy> of element

# Select the bank option for Bank Method
* scroll to the element "bankOptionForBankMonnet" be visible
* Wait for element then click "bankOptionForBankMonnet"
//* Find element by "rutInfoForBankMonnet" clear and send keys "111111111"
* Wait "2" seconds
* Write value "111111111" to element "rutInfoForBankMonnet", if the element exists
* Write value "1234" to element "passwordForBankMonnet"
* Wait for element then click "continueToPaymentPageBankMonnet"
* Wait "10" seconds
* Wait for element then click "continueToPaymentPageBankMonnet"
* Wait "6" seconds
* Write value "12345678" to element "activationCodeWrapperForMonnetBankMethod"
* Wait "2" seconds
//* Send the text to the defined Activation Code field with "activationCodeWrapperForMonnetBankMethod"
* Wait for element then click "continueToPaymentPageBankMonnet"
* Wait "2" seconds
* Send the text to the card Code "cardCodeA1","cardCodeB1",and "cardCodeC1"
* Wait for element then click "continuarAfterCode"
* Write value "123456" to element "claveCode"
* Wait for element then click "continuarAfterCode"
* Wait "25" seconds

# Enter Rut and Clave info at Welcome of TransBank page
* Write value "111111111" to element "rutClient"
* Write value "123" to element "claveClient"
* Wait "5" seconds
* Debug Step
* Click to the defined element with "acceptPaymentLastPage"

# Accept the option on TransBank page to be done the payment
* Wait for element then click "continuePaymentLastPage"
* Wait "25" seconds

# Click Back Trade And Redirect to website
* Wait for element then click "backTrade"

# Enter Credit Card İnformation with <cardnumber>, <cvvNumber> and <cardexpiration> monnet
* Wait "10" seconds
* Write value <cardnumber> to element "monnetCreditCard"
* Write value <cvvNumber> to element "monnetCvv"
* Write value <cardexpiration> to element "cardExpirationMonnet"
* Wait "5" seconds
* Wait for element then click "cuntinueButtonMonnet"
* Wait "4" seconds

#Select to the installment option
* Wait for element then click "installmentButtonMonnet"
* Wait for element then click "selectInstallmentOptionMonnet"
* Wait for element then click "allowInstallmentOptionMonnet"
* Wait "2" seconds
* Wait for element then click "allowPaymentMonnet"
* Wait "10" seconds
//* Write value "111111111" to element "rutClient"
//* Write value "123" to element "claveClient"
//* Wait "2" seconds
//* Debug Step
//* Click to the defined element with "acceptPaymentLastPage"
//* Wait for element then click "continuePaymentLastPage"
//* Wait "15" seconds

# Verify the deposit information and continue the main site
* Wait for element then click "continueButtonOnLastDepositPage"

# Go to Booking Page
* Click to element "hamburgerMenu"
* Click to element "goToBookingsPage"

//# Check that the last payment is done

# Go to Withdrawal Methods
* Wait "2" seconds
* Wait for element then click "openWithdrawalMethods"


# Select the Bank Type and Enter the Account Number
* Pick the one of elements "bankOptions" randomly excluding first option
* Write value "4051885600446623" to element "bankAccountNumber"


# Select the Credit Card
* Wait for element then click "cardInWithdrawalPage"
* Wait "2" seconds
* Pick the one of elements "creditCardField" randomly excluding first option
* Wait "5" seconds

# Select Month and Year
* Pick the one of elements "creditCardMonth" randomly excluding first option
* Pick the one of elements "creditCardYear" randomly excluding first option

# Continue to accept the payment
* Wait for element then click "paymentPage"
* Wait for element then click "paymentPageVerified"


# Write Masked Card Number
* Write value "000000" to element "maskedCardNumber"

# Select the Identity Type and Enter the Account Number
* Wait "2" seconds
* Pick the one of elements "listOfIdentityTypeInWithdrawalPage" randomly excluding first option For Condition and write identity number "identityNumber"


# Compare the entered withdrawal amount same with amount which inside the transactions info
//* Save "transactionAmountInText" the replaced value "transactionMessageForWithdrawal" inside the text
//* Compare saved key "transactionAmountInText" contains the other saved key "randomNumber" of element
//* Find element by "transactionMessageForWithdrawal" and compare saved key "randomNumber" contains the text of element
* Find element by "transactionNumberWithdrawal" and save text "transactionNumberInWithdrawalPage"
* Wait for element then click "loginButtonArea"

# Compare the transactions number which both in the transaction page and also the booking page
* Find element by "firstBookingItem" and compare saved key "transactionNumberInWithdrawalPage" contains the text of element

# Go to Document Page
* Click to element "hamburgerMenu"
* Click to element "goToDocumentPage"

#Select the Type of Identifier
* Wait for element then click "selectTypeOfIdentifierToDocument"
* Pick the one of elements "optionsOfIdentifier" randomly
* Wait "2" seconds
//* Select the one of elements "selectTypeOfIdentifierToDocument" randomly regarding "optionsOfIdentifier" size in the dropdown list
//* Select the one of elements "selectTypeOfIdentifierToDocument" randomly in the dropdown list

# Upload the File
* Upload the file with "src/test/resources/file/Test.PNG" to the element "uploadDocumentButton"
* Wait "2" seconds
//* Upload the file to the element "uploadDocumentButton"


# Upload Document on Betweb
* Go to "https://test.texsportbet.com/en-gb" address
* Click to element "switchToDesktop"
* Wait "2" seconds
* Click to element "gotItButton"
* Check if element "loginBetweb" exists
* Wait "2" seconds
//* Elementine tıkla "gotItButton"
* Click to element "loginBetweb"
* Write value "beliztest" to element "nameBetweb"
* Write value "password1" to element "lastnameBetweb"
* Click to element "loginBtnBetweb"
* Hover element by "accountMenuBetweb"
* Click to element "myAccountBetweb"
* Click to element "documentPageBetweb"
* Upload the file to the element "chooseTheFileBetweb"
* Wait "2" seconds
* Click to element "uploadDocumentBetweb"



# Select The Value In Dropdown List Test
* Select the one of elements "dropdownListTest" randomly regarding "optionsOfTest" size in the dropdown list

# Go to Bet Settings Page
* Click to element "hamburgerMenu"
* Wait for element then click "goToProfilePage"
* Wait "2" seconds
* Wait for element then click "goToBetSettingsPage"

# Set the Odd Values In Bet Settings
* Wait for element then click "oddValueChangesSelect"
* Wait "2" seconds
* Pick the one of elements "oddValueChangesOptions" randomly
* Wait "2" seconds

# Set the Cashout Amount In Bet Settings
//* Wait for element then click "cashoutAmountChangesSelect"
* Pick the one of elements "cashoutAmountChangesOptions" randomly
* Wait "2" seconds

# Enter the Default Stake Value
* Write value "30" to element "defaultStake"

# Save The Settings
* Wait for element then click "nextBtn"
* Wait "2" seconds

# Verify that the bet settings are saved
* Find element by "assersionOfSaveFunction" and verify that text of element equals to "Your settings have been saved."


